-- Step 1: Create a new database if it doesn't exist
CREATE DATABASE IF NOT EXISTS customer_db;

-- Step 2: Select the database to use
USE customer_db;

-- Step 3: Create the 'customers' table with appropriate columns
CREATE TABLE customers (
    ID INT PRIMARY KEY,
    NAME VARCHAR(50),
    AGE INT,
    ADDRESS VARCHAR(100),
    SALARY DECIMAL(10, 2)
);

-- Step 4: Insert sample data into the 'customers' table
INSERT INTO customers (ID, NAME, AGE, ADDRESS, SALARY) VALUES
    (1, 'Ramesh', 32, 'Ahmedabad', 2000.00),
    (2, 'Khilan', 25, 'Delhi', 1500.00),
    (3, 'Kaushik', 23, 'Kota', 2000.00),
    (4, 'Chaitali', 25, 'Mumbai', 6500.00),
    (5, 'Hardik', 27, 'Bhopal', 8500.00),
    (6, 'Komal', 22, 'MP', 4500.00);

-- Step 5: Create or replace a trigger to display salary changes during insert, update, or delete operations
CREATE OR REPLACE TRIGGER display_salary_changes  
BEFORE DELETE OR INSERT OR UPDATE ON customers  
FOR EACH ROW  
WHEN (NEW.ID > 0)
DECLARE  
    sal_diff NUMBER; -- Variable to hold the difference between new and old salary
BEGIN  
    sal_diff := NVL(:NEW.salary, 0) - NVL(:OLD.salary, 0);  
    
    -- Display old salary, new salary, and the salary difference
    dbms_output.put_line('Old salary: ' || NVL(:OLD.salary, 0));  
    dbms_output.put_line('New salary: ' || NVL(:NEW.salary, 0));  
    dbms_output.put_line('Salary difference: ' || sal_diff);  
END;
/ 

-- Step 6: Update the salary of the customer with ID = 2
UPDATE customers  
SET salary = salary + 500  
WHERE ID = 2;
